# ====================================
# COMANDOS √öTILES PARA DESARROLLO
# ====================================
# Copia y pega estos comandos en PowerShell/Terminal

# üöÄ SETUP INICIAL (ejecutar una sola vez)
# -------------------------------------------------------
pip install -r requirements.txt
python manage.py makemigrations
python manage.py migrate
python manage.py createsuperuser  # Opcional: para acceso al admin

# üåê EJECUTAR EL SERVIDOR
# -------------------------------------------------------
python manage.py runserver          # http://localhost:8000
python manage.py runserver 8080     # Puerto personalizado

# üóÉÔ∏è BASE DE DATOS
# -------------------------------------------------------
python manage.py makemigrations     # Crear migraciones
python manage.py migrate            # Aplicar migraciones
python manage.py showmigrations     # Ver estado de migraciones
python manage.py dbshell            # Acceder a la consola de SQLite

# üë§ USUARIOS Y ADMIN
# -------------------------------------------------------
python manage.py createsuperuser    # Crear superusuario
python manage.py changepassword [usuario]  # Cambiar contrase√±a

# üßπ COMANDOS DE LIMPIEZA
# -------------------------------------------------------
python manage.py collectstatic      # Recopilar archivos est√°ticos
python manage.py check              # Verificar configuraci√≥n
python manage.py shell              # Consola interactiva de Python/Django

# üîç COMANDOS DE INFORMACI√ìN
# -------------------------------------------------------
python manage.py showmigrations     # Estado de migraciones
python manage.py diffsettings       # Comparar settings con defaults
python manage.py inspectdb          # Generar modelos desde BD existente

# üß™ TESTING
# -------------------------------------------------------
python manage.py test               # Ejecutar todas las pruebas
python manage.py test qrweb         # Ejecutar pruebas de una app espec√≠fica

# üìä DATOS DE EJEMPLO (si quieres crear datos de prueba)
# -------------------------------------------------------
python manage.py shell
# Luego en la consola Python:
# from pagTickets.models import RegistroQR
# RegistroQR.objects.create(codigo="TEST123")
# exit()

# ‚öôÔ∏è URLS IMPORTANTES
# -------------------------------------------------------
# http://localhost:8000/              # P√°gina principal (lector QR)
# http://localhost:8000/admin/        # Panel de administraci√≥n
# http://localhost:8000/registrar_qr/ # API para registrar QR (POST)
# http://localhost:8000/ultimos_registros/ # API √∫ltimos registros (GET)
